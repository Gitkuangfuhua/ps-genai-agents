schema: |-
  Node properties:
  Encounter {id: STRING, code: STRING, description: STRING, class: STRING, date: DATETIME, baseCost: FLOAT, claimCost: FLOAT, coveredAmount: FLOAT, isEnd: BOOLEAN, end: DATETIME}
  Organization {id: STRING, name: STRING}
  Condition {code: STRING, description: STRING, num: INTEGER}
  Procedure {code: STRING, description: STRING}
  CarePlan {code: STRING, description: STRING}
  Allergy {code: STRING, description: STRING}
  Drug {code: STRING, description: STRING}
  Patient {id: STRING, birthDate: DATETIME, deathDate: STRING, firstName: STRING, lastName: STRING, SSN: STRING, marital: STRING, gender: STRING, race: STRING, ethnicity: STRING, city: STRING}
  Address {address: STRING, location: POINT}
  Provider {id: STRING, name: STRING, speciality: STRING}
  Payer {id: STRING}

  Relationship properties:
  INSURANCE_START {year: DATETIME}
  INSURANCE_END {year: DATETIME}

  The relationships:
  (:Patient)-[:HAS_ENCOUNTER]->(:Encounter)
  (:Patient)-[:HAS_ADDRESS]->(:Address)
  (:Patient)-[:INSURANCE_START]->(:Payer)
  (:Patient)-[:INSURANCE_END]->(:Payer)
  (:Encounter)-[:NEXT]->(:Encounter)
  (:Encounter)-[:HAS_END]->(:Encounter)
  (:Encounter)-[:HAS_PROVIDER]->(:Organization)
  (:Encounter)-[:HAS_CONDITION]->(:Condition)
  (:Encounter)-[:HAS_PROCEDURE]->(:Procedure)
  (:Encounter)-[:HAS_OBSERVATION]->(:Observation)
  (:Encounter)-[:HAS_CARE_PLAN]->(:CarePlan)
  (:Encounter)-[:HAS_ALLERGY]->(:Allergy)
  (:Encounter)-[:HAS_DRUG]->(:Drug)
  (:Encounter)-[:HAS_PAYER]->(:Payer)
  (:Provider)-[:BELONGS_TO]->(:Organization)
  (:Provider)-[:HAS_ADDRESS]->(:Address)
  (:Organization)-[:HAS_ADDRESS]->(:Address)

  Notes and context for the data model:
  * Encounters represent each encounter that a Patient has with a Provider. Each encounter is associated with an Event.
  * Events are either Condition, Procedure, Observation, CarePlan, Drug, or Allergy nodes.
  * If an encounter has a HAS_END relationship to another Encounter, for example "(e1:Encounter)-[:HAS_END]->(e2:Encounter)", Encounter e2 represents the end-date of Encounter e1.
  * In this pattern, (e1:Encounter)-[:NEXT]->(e2:Encounter), e2 represents the next chronological Encounter the related Patient has had. The related Patient is represented by the "(:Patient)-[:HAS_ENCOUNTER]->(:Encounter)" pattern. A Patient Journey is essentially the linked list of Encounter-to-Encounter nodes.
